---
title: ""
author: ""
date: ""
format:
  beamer:
    theme: "default"
    colortheme: "default"
    title-slide: false
    header-includes:
      - |
        \setbeamertemplate{title page}{}
      - |
        \setbeamertemplate{footline}{%
          \ifnum\insertframenumber>1
            \leavevmode%
            \hbox{%
              \begin{beamercolorbox}[wd=0.5\paperwidth,ht=2.25ex,dp=1ex,left]{author in head/foot}%
                \hspace*{0.5em}\includegraphics[height=0.6cm]{Images/logo1.png}%
              \end{beamercolorbox}%
              \begin{beamercolorbox}[wd=0.5\paperwidth,ht=2.25ex,dp=1ex,right]{date in head/foot}%
                \includegraphics[height=0.6cm]{Images/logo2.png}\hspace*{0.5em}%
              \end{beamercolorbox}%
            }%
            \vskip0pt%
          \fi
        }
execute:
  mermaid: true
lang: es
---

```{r setup, include=FALSE}
# Load required libraries (assuming they are installed)
library(quarto)
library(rmarkdown)
library(magrittr)

# Set options for code chunks
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)

# Path to results.RData
results_path <- "results/results.RData"

# Load the results
if (file.exists(results_path)) {
  load(results_path)
} else {
  stop("results.RData not found. Please ensure it is generated first.")
}
```



# 

![](Images/cover_image.jpg){width="100%"}

# **Resumen Ejecutivo**

Este slide deck presenta los resultados de la segmentación de riesgo SARLAFT, obtenida a partir de la integración de datos, el pre-procesamiento, y el análisis de conglomerados (**clustering**). Se identificaron clústers con perfiles de riesgo diferenciados.

# **Objetivo**

Implementar una metodología de segmentación de contrapartes tales como asociados y proveedores. Analizando información de diversos **Factores riesgo** de SARLAFT:

-   **Clientes:** Actividad económica, transacciones, ingresos, egresos, y patrimonio.
-   **Productos:** Características y nicho de mercado.
-   **Canales de distribución:** Tipología y características.
-   **Jurisdicciones:** Ubicación y riesgos.

# **Enfoques de la segmentación**

|  |  |  |
|--------------------------|-----------------------|-----------------------|
| **TIPO** | **Comportamental** | **Predictivo** |
| -------------------------- | ----------------------- | ----------------------- |
| **¿QUÉ ES?** | Dividir a las contrapartes en grupos | Asignar a las contrapartes a un grupo específico |
| -------------------------- | ----------------------- | ----------------------- |
| **¿PARA QUÉ SIRVE?** | Agrupamiento | Predicción |
| -------------------------- | ----------------------- | ----------------------- |
| **¿CÓMO SE HACE?** | Algoritmo de agrupación | Algoritmo de clasificación |
| -------------------------- | ----------------------- | ----------------------- |
| **¿CUÁNDO SE DEBERÍA USAR?** | Descubrir segmentos desconocidos | Predecir a cuál segmento pertenece |

# **Método de segmentación**

![](Images/method.jpg){width="100%"}

# **Proceso de Análisis**

![center](Images/diagram.png){width="100%"}

# **Proceso de Análisis**

-   **Transformación Box-Cox**: Se ajustan variables numéricas (desde Activos hasta Num. Trans.) para corregir asimetrías.
-   **PCA**: Se reduce la dimensionalidad con componentes principales.
-   **Comparación métodos de agrupación**: Se evalúan métodos: jerárquicos, de k-medias, pam y clara; mediante medidas internas, tales como la conectividad, el coeficiente de silueta (silhouette) y el indice de Dunn y se selecciona(n) el(los) algoritmos óptimos.
-   **Análisis de Estabilidad**: Se analiza la robustez de cada solución óptima con bootstrap y se calcula el coeficiente **Jaccard** .
-   **Selección**: Se opta el método más completo en términos de validación interna y estabilidad.
-   **Segmentación**: Se ejecuta el método de clustering seleccionado.

# **Entendimiento de Datos**

**Periodo de tiempo**: Desde 2023-01-01 hasta 2024-12-31

|  |  |  |
|--------------------------|-----------------------|-----------------------|
| **DATOS** | **Inicial** | **Modelo** |
| -------------------------- | ----------------------- | ----------------------- |
| **ID Asociados** | 3.851 | 2.534* | 
| -------------------------- | ----------------------- | ----------------------- |
| **Transacciones** | 512.487 | 482.399* |

# **Preparación de los datos**

Se llevan a cabo los siguientes procedimientos:

- Cruce de bases de datos Asociados y Movimientos.
- Creación de variables: Monto y frecuencia diferenciado por: asociados, productos, canales y jurisdicciones para periodos mensuales.
- Selección de variables según requerimientos normativos y aporte a los modelos.

# **Base de datos**

![center](Images/data_structure_schema.png){width="100%"}

# **Análisis exploratorio de datos**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_histogram_matrix(affiliates[,c(11:15)], affiliates_t[,c(11:15)])
```

# **Análisis exploratorio de datos**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_histogram_matrix(affiliates[,c(16:19)], affiliates_t[,c(16:19)])
```

# **Análisis exploratorio de datos**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_histogram_matrix(affiliates[,c(20:23)], affiliates_t[,c(20:23)])
```

# **Análisis de Componentes Principales (PCA)**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
factoextra::fviz_eig(pca_results, addlabels = TRUE)
```

# **Análisis de Componentes Principales (PCA)**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
factoextra::fviz_pca_var(pca_results, col.var = "cos2",
                         gradient.cols = gg_color(5), 
                         repel = TRUE # Avoid text overlapping
)
```

# **Selección del método de agrupamiento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
knitr::kable(final_summary[c(1:10),c(1:5,7)])
```

# **Selección del método de agrupamiento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
knitr::kable(final_summary[c(11:20),c(1:5,7)],row.names = FALSE)
```

# **Selección del método de agrupamiento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
graphics::par(mfrow = c(2, 2), mar = c(1, 1, 2, 1))

# Generate charts for key configurations
create_fmsb_radar(radar_data, "Pam", 5)
create_fmsb_radar(radar_data, "Clara", 5)
create_fmsb_radar(radar_data, "Hierarchical", 5)
create_fmsb_radar(radar_data, "Hierarchical", 6)

graphics::par(mfrow = c(1, 1), mar = c(1, 1, 2, 1))
```

# **Agrupamiento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
factoextra::fviz_dend(
  hclust_obj,
  cex = 0.5,
  k = k,
  k_colors = cluster_colors,
  rect = TRUE
)
```


# **Agrupamiento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
ggpubr::ggscatter(clus_res,
                  x = "Dim.1", y = "Dim.2", color = "cluster",
                  repel = FALSE, ellipse = TRUE, ellipse.type = "none",
                  shape = 19, size = 1, 
                  xlab = paste0("Dim.1"," (", round(pca_results$eig[1,2],1),"%)"), 
                  ylab = paste0("Dim.2"," (", round(pca_results$eig[2,2],1),"%)"), 
                  ggtheme = ggplot2::theme_minimal()) + 
  ggplot2::geom_hline(ggplot2::aes(yintercept = 0), color = "black", linetype = "dashed") +
  ggplot2::geom_vline(ggplot2::aes(xintercept = 0), color = "black", linetype = "dashed") +
  ggplot2::theme(legend.position = "bottom")
```

# **Agrupamiento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
plotrix::pie3D(cluster_counts,
               labels = labels, explode = 0.1, radius = 0.9, height = 0.05,
               col = gg_color(k), labelcex = 0.7, main = " "
)
```

# **Características de cada segmento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_cluster_radar_charts(
  data = affiliates,
  features_to_plot = names(affiliates)[2:8]
)
```

# **Características de cada segmento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_cluster_radar_charts(
  data = affiliates,
  features_to_plot = names(affiliates)[11:15]
)
```

# **Características de cada segmento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_cluster_radar_charts(
  data = affiliates,
  features_to_plot = names(affiliates)[16:19]
)
```

# **Características de cada segmento**

```{r, echo = FALSE, message = FALSE, warning = FALSE}
create_cluster_radar_charts(
  data = affiliates,
  features_to_plot = names(affiliates)[20:23]
)
```

# **Resumen del agrupamiento**

![](Images/summary_table.png){width="100%"}

# **Sistema de alertas**

![](Images/alertas1.png){width="100%"}

# **Sistema de alertas**

![](Images/alertas2.png){width="100%"}


# **Sistema de alertas**

![](Images/alertas3.png){width="100%"}